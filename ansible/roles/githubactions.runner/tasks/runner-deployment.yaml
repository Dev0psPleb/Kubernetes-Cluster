---
# runner-deployment.yaml
- set_fact: runner_namespace="default"
  when: runner_namespace is undefined

- name: Generate repository RunnerDeployment manifest from template
  ansible.builtin.template:
    src: '{{ role_path}}/templates/runnerdeployment.yaml.j2'
    dest: '{{ role_path }}/files/runnerdeployment-{{ repo_name }}.yaml'
  when: repo_name is defined

- name: Generate organizational RunnerDeployment manifest from template
  ansible.builtin.template:
    src: '{{ role_path}}/templates/runnerdeployment.yaml.j2'
    dest: '{{ role_path }}/files/runnerdeployment-{{ owner }}.yaml'
  when: repo_name is undefined

- name: Deploy repository RunnerDeployment
  kubernetes.core.k8s:
    state: present
    kubeconfig: '{{ KUBECONFIG }}'
    src: '{{ role_path }}/files/runnerdeployment-{{ repo_name }}.yaml'
  when: repo_name is defined

- name: Deploy organizational RunnerDeployment
  kubernetes.core.k8s:
    state: present
    kubeconfig: '{{ KUBECONFIG }}'
    src: '{{ role_path }}/files/runnerdeployment-{{ owner }}.yaml'
  when: repo_name is undefined

- name: Wait for runner deployment to be running
  shell: "kubectl get pods -n {{ runner_namespace }} --output=jsonpath='{.items[*].metadata.name}' --kubeconfig='{{ KUBECONFIG }}'"
  register: pods_created
  until: item in pods_created.stdout
  retries: 10
  delay: 30
  with_items:
    - '{{ runner_name }}'

- name: Wait for runner deployment to become ready
  shell: "kubectl wait pod -n {{ runner_namespace }} --for condition=Ready --selector runner-deployment-name={{ runner_name }} --kubeconfig='{{ KUBECONFIG }}'"
  register: runner_ready

- debug: var=runner_ready.stdout_lines